#! /usr/bin/python3
#
#   Copyright 2019, 2020 Zack Weinberg
#
#   This library is free software; you can redistribute it and/or
#    modify it under the terms of the GNU Lesser General Public License
#   as published by the Free Software Foundation; either version 2.1 of
#   the License, or (at your option) any later version.
#
#   This library is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU Lesser General Public License for more details.
#
#   You should have received a copy of the GNU Lesser General Public
#   License along with this library; if not, see
#   <https://www.gnu.org/licenses/>.

"""Find out whether the compiler can be invoked with options -E -dD
to print preprocessed source with all #define lines preserved.
This is needed for the symbol-renaming test.
"""

import argparse
import sys
import subprocess

from common import run


def main():
    ap = argparse.ArgumentParser(description=__doc__)
    ap.add_argument("cc_cmd", nargs=argparse.REMAINDER,
                    help="Command line to invoke the compiler.")
    args = ap.parse_args()

    testcmd = args.cc_cmd + ["-E", "-dD", "-xc", "-"]
    try:
        result = run(
            testcmd,
            input='#include <errno.h>',
            capture_output=True,
            encoding='utf-8'
        )
    except subprocess.CalledProcessError as e:
        # -E -dD -xc - was not an acceptable set of command line options,
        # or something else went wrong.
        sys.stderr.write(e.stderr)
        sys.stderr.write(str(e))
        sys.exit(1)

    sys.stderr.write(result.stderr)
    for line in result.stdout.splitlines():
        if line.startswith('#define EDOM'):
            # -dD does what we want!
            sys.exit(0)

    # if we get here, -dD was accepted but does not do what we want
    sys.stdout.write(result.stdout)
    sys.exit(1)


main()
